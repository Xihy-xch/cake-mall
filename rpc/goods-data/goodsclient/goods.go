// Code generated by goctl. DO NOT EDIT!
// Source: goods_data.proto

//go:generate mockgen -destination ./goods_mock.go -package goodsclient -source $GOFILE

package goodsclient

import (
	"context"

	"cake-mall/rpc/goods-data/goods"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	CreateGoodsSPURequest  = goods.CreateGoodsSPURequest
	CreateGoodsSPUResponse = goods.CreateGoodsSPUResponse
	CreateGoodsSKURequest  = goods.CreateGoodsSKURequest
	CreateGoodsSKUResponse = goods.CreateGoodsSKUResponse
	Toppings               = goods.Toppings

	Goods interface {
		CreateGoodsSPU(ctx context.Context, in *CreateGoodsSPURequest) (*CreateGoodsSPUResponse, error)
		CreateGoodsSKU(ctx context.Context, in *CreateGoodsSKURequest) (*CreateGoodsSKUResponse, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

func (m *defaultGoods) CreateGoodsSPU(ctx context.Context, in *CreateGoodsSPURequest) (*CreateGoodsSPUResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.CreateGoodsSPU(ctx, in)
}

func (m *defaultGoods) CreateGoodsSKU(ctx context.Context, in *CreateGoodsSKURequest) (*CreateGoodsSKUResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.CreateGoodsSKU(ctx, in)
}
